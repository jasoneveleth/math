const articles = [
{
link: "articles/five_color_theorem.md.html",
title: "Five Color Theorem",
text: "five color theorem author  jason date  2021 07 16        theorem  for every  planar graph  planar_graph md html   there exists a coloring of its vertices using at most 5 colors such that no two adjacent vertices have the same color     proof     lemma  degree 5 vertex  to show that every planar graph has at least 1 vertex of degree   leq 5   we assume  euler's formula  euler_formula md html   that given  f  faces   v  vertices  and  e  edges of a planar graph  that   f + v = e + 2     we assume for contradiction  there exists a planar graph  g =  f  v  e   with all vertices of degree   geq 6   then let us consider the size of this set    every edge will be in there twice  so   |ve| = 2|e|    also  we know that all vertices have at least 6 edges  so   |ve|  geq 6|v|    thus    2|e|  geq 6|v|  implies  frac 1  3 |e|  geq |v|     next  consider the set    every edge can see 2 faces  so  |fe| = 2|e|   and every face has at least 3 edges  so  |fe|  geq 3|f|   putting this together   2|e|  geq 3|f|  implies  frac 2  3 |e|  geq |f|    now  we apply euler's formula to get    thus   2  leq 0   a contradiction       real proof  now for the real proof  this proof is by induction on the number of vertices in a planar graph   base case   v=1   it is clear that this is 5 colorable with just 1 color   inductive step  we assume that all planar graphs with  v 1  vertices are 5 colorable  we know from the lemma that there exists at least one vertex  w  of degree 5 or less  we know that if it has less degree less than 5 that we instantly win because if we remove that vertex  it is 5 colorable  from our inductive hypothesis   and because  w  has degree less than 5 it can be colored by a color that isn't in its neighbors  thus  we can assume  w  has 5 neighbors   now  becuase  w  has 5 neighbors  if any two of them have the same color  then we can color  w  the color that is missing  so we can assume that  w  has degree at least 5   to recap what we know so far  all planar graphs have at least one vertex with less than degree 5  the worst case scenario for our proof is when it is exactly 5  and all of the neighbors have different colors  all other cases we win   now  we label the neighbors  v_1  through  v_5  based on their colors  we look at the largest subgraph that conects to vertex  1  which only contains  1  and  3  colored vertices  it can have other colors hanging off of it   now  if it doesn't contain  v_3  then we can flip the color each of the vertices' of the sub graph  i e  every  1  colored vertex becomes a  3  colored vertex   and then we can just color  w   1  because it will have 2 vertices of color  3  adjacent to it and no vertices of color  1  now   thus  we can assume that there is an unbroken path from  v_1  to  v_3  which contains only  1  and  3  colored vertices  now  we can apply the same exact logic to the colors  2  and  4   thus  we only care about the case when there is unbroken path from  v_2  to  v_4   as otherwise we can just flip the colors fo the subgraph coming from  v_2  to recolor  w  with color  2   however  there can't be both an unbroken path from  v_1  to  v_3  using only  1  and  3  colored vertices  *and* an unbroken path from  v_2  to  v_4  using only  2  and  4  colored vertices  the paths have to cross because they are paths on a plane  this that case leads to contradiction  so any planar graph must've fallen into one of the cases that was 5 colorable  thus  every planar graph is 5 colorable  "
},
{
link: "articles/gradient.md.html",
title: "Gradient",
text: "gradient author  jason date  2021 07 12        theory  the gradient is like a derivative of a  single valued  function that takes a vector as input  it is a row vector  given a vector  x   and function  f   the gradient is written   nabla f x       examples  given  then we take partial derivatives with respect to each variable to get the gradient "
},
{
link: "articles/linear_regression.md.html",
title: "Linear Regression",
text: "linear regression author  jason date  2021 07 11        theory  we are trying to find the line of best fit given a collections of coordinates   for example      x_1  y_1    x_2 y_2    x_3  y_3    dots     we would like to find  m b  such that  y = mx + b  minimizes the sum of the residuals squared  by that i mean we want to minimize a function  l  alpha  =  sum_i  y_i    mx_i + b   2   by finding the best  m  and  b    we need to set up some definitions  let x =  begin bmatrix x_1 & 1  x_2 & 1  x_3 & 1  x_4 & 1   dots &  dots end bmatrix    alpha =  begin bmatrix m  b end bmatrix      so our goal is  recall from  vectors  vectors md html  that   sum_i x_i 2 =  lvert x  rvert 2  recall that   lvert x  rvert 2 = x tx   recall that   a + b  t = a t + b t  and   ab =b ta t    to minimize this  we find the critical points of the function  we do this by finding where the  gradient  gradient md html  of  l  alpha   is  0    recall from  vector derivatives  vector_derivatives md html     frac d  dx    u tx  = u t     frac d  dx   x tu  = u t   and   frac d  dx  x tx  =  frac d  dx   bar x  tx  +  frac d  dx  x t bar x      1   and now for the glorious part  who am i kidding  this whole thing has been glorious       examples  say we are given this set of coordinates       1 3  0 8    3 2  3 5    5 6  6 4    8 5  7 7      then we can either do the arithmetic by hand  from the last equation  or open  `julia` and give give it the vectors  some output omitted   ```julia julia> y =  0 8  3 5  6 4  7 7  julia> x =  1 3 1  3 2 1  5 6 1  8 5 1  julia> yt = transpose y  julia> xt = transpose x  julia> yt * x * inv xt * x  1Ã—2 transpose   vector float64   with eltype float64   0 962823  0 122874  ```  which gives us our desired line of best fit   y = 0 962823x + 0 122874        1   the bar in   bar  alpha   or   bar x   means treat it as a constant  in   the same way that you would if you were doing the product rule with single   valued functions    frac d  dx  f x g x   =  frac d  dx  f x  bar g  x   +    frac d  dx   bar f  x  g x     "
},
]